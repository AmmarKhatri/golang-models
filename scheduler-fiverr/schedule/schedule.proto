
syntax = "proto3";
package schedule;
option go_package = "/schedule";
import "google/protobuf/empty.proto";
// A Label resource
message Label {
    // a unique label id
    int64 id = 1;
    string label_text = 2;
    string label_color = 3; 
}

message RecipientType {
    int64 id = 1;
    string name = 2;
}
message RecipientAttributes {
    int64 recipient_type_id = 1;
    string attribute_name = 2;
    string attribute_value = 3;
}

message Recipient {
    int64 id = 1;
    int64 recipient_id = 2;
    string name = 3;
    int64 recipient_type = 4;
    repeated RecipientAttributes attributes = 5;
}

message ServiceType {
    int64 id = 1;
    string label = 2;
    string description = 3;
    int64 base_price = 4;
    int64 default_duration = 5;
}

message Customer {
    int64 id = 1;
    string name = 2;
    string phone = 3;
    string email = 4;
    repeated Recipient recipients = 5;
}

message CustomerPrice {
    int64 id = 1;
    Customer customer = 2;
    ServiceType service_type = 4;
    double customer_price = 5;    
}
message Provider {
    int64 id = 1;
    string name = 2;
    string phone = 3;
    string email = 4;
    bool has_visible_calendar = 5;
    repeated ServiceType service_types = 6;
}
// An appointment resource
message Appointment {
    int64 appointment_id = 1;
    Provider provider = 2;
    Customer customer = 3;
    ServiceType service_type = 4;
    int64 startDate = 5;
    int64 duration = 6;
    repeated Day days = 7;
}

message AppointmentTypeSummary {
    string icon = 1;
    int64 total_appointmets_per_type = 2;
}

message DaySummary {
    Provider provider = 1;
    int64 day = 2;
    repeated AppointmentTypeSummary appointment_summaries = 3;    
}


// A day resource
message Day {
    Provider provider = 1;
    int64 calendar_date = 2;
    bool is_available = 3;
    repeated Label labels = 4;
}

message CustomerDay {
    Day date = 1;
    Appointment appointment = 2;
}

message ProviderDay {
    Day date = 1;
    repeated Label labels = 2;
    DaySummary day_summary = 3;    
}

message DayDetails {
    Provider provider = 1;
    string day = 2;
    repeated Appointment appointments = 3;
}

// A ListDaysRequest
message ListDaysRequest {
    // a unique calendar id
    int64 id = 1;
    Provider provider = 2;

    // the first day to return
    int64 startDate = 3;

    // the number of days to return
    int64 length = 4;
}

message ListProviderDaysResponse {
    repeated ProviderDay days = 1;
}

message ListCustomerDaysResponse {
    repeated CustomerDay days = 1;
}

message UpdateCalendarRequest {
    Provider provider = 1;
    repeated ProviderDay days = 2;
}

message UpdateCalendarResponse {
    repeated ProviderDay days = 1;
}

message AddAppointmentRequest {
    Provider provider = 1;
    Appointment appointment = 2;
}

message CancelAppointmentRequest {
    int64 appointment_id = 1;
}


service Scheduler {
    rpc ListProviderDays(ListDaysRequest) returns (ListProviderDaysResponse);
    rpc ListCustomerDays(ListDaysRequest) returns(ListCustomerDaysResponse);
    rpc UpdateCalendar(UpdateCalendarRequest) returns (UpdateCalendarResponse);
    rpc AddAppointment(AddAppointmentRequest) returns (Appointment);
    rpc CancelAppointment(CancelAppointmentRequest) returns (google.protobuf.Empty);
    rpc GetDayDetails(Day) returns (DayDetails);
}

// usage:
//   rules: # IMPORTANT: ONLY LAST MATCHING RULE IS APPLIED
//   # Disable API key validation on just the ListShelves method
//   # while requiring an API key for the rest of the API.
//   - selector: "*"
//     allow_unregistered_calls: false
//   - selector: "endpoints.scheduler.Scheduler.ListCustomerDays"
//     allow_unregistered_calls: true
